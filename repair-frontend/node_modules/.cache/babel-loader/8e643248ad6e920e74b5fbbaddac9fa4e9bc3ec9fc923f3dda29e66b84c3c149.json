{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://localhost:5000/api/users\";\n\n// Get user by username\nexport const getUserByUsername = async username => {\n  const res = await axios.get(`${BASE_URL}?username=${username}`);\n  // assuming backend supports query ?username=xxx\n  if (res.data.length === 0) throw new Error(\"User not found\");\n  return res.data[0]; // return first matched user\n};","map":{"version":3,"names":["axios","BASE_URL","getUserByUsername","username","res","get","data","length","Error"],"sources":["D:/university/2 yr -2 sem/ITP project/CricketXpert/repair-frontend/src/api/userApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/users\";\r\n\r\n// Get user by username\r\nexport const getUserByUsername = async (username) => {\r\n  const res = await axios.get(`${BASE_URL}?username=${username}`);\r\n  // assuming backend supports query ?username=xxx\r\n  if (res.data.length === 0) throw new Error(\"User not found\");\r\n  return res.data[0]; // return first matched user\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,iCAAiC;;AAElD;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,QAAQ,IAAK;EACnD,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,QAAQ,aAAaE,QAAQ,EAAE,CAAC;EAC/D;EACA,IAAIC,GAAG,CAACE,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;EAC5D,OAAOJ,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
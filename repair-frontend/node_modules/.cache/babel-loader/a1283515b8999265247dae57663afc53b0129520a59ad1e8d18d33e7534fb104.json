{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:5000'; // Replace with your backend URL\n\n// Repair Requests\nexport const getAllRepairRequests = params => axios.get(`${BASE_URL}/api/repairs`, {\n  params\n});\nexport const getRepairById = id => axios.get(`${BASE_URL}/api/repairs/${id}`);\nexport const createRepairRequest = data => axios.post(`${BASE_URL}/api/repairs`, data);\nexport const updateRepairRequest = (id, data) => axios.put(`${BASE_URL}/api/repairs/${id}`, data);\nexport const deleteRepairRequest = id => axios.delete(`${BASE_URL}/api/repairs/${id}`);\nexport const updateRequestStatus = (id, data) => axios.put(`${BASE_URL}/api/repairs/status/${id}`, data);\nexport const customerDecision = (id, data) => axios.put(`${BASE_URL}/api/repairs/customer-decision/${id}`, data);\nexport const assignTechnician = (id, data) => axios.put(`${BASE_URL}/api/repairs/assign/${id}`, data);\nexport const updateProgress = (id, data) => axios.put(`${BASE_URL}/api/repairs/progress/${id}`, data);\nexport const downloadReport = id => axios.get(`${BASE_URL}/api/repairs/report/download/${id}`, {\n  responseType: 'blob'\n});\n\n// Technicians\nexport const getAllTechnicians = () => axios.get(`${BASE_URL}/api/technicians`);\nexport const getTechnicianById = id => axios.get(`${BASE_URL}/api/technicians/${id}`);\n\n// Feedbacks\nexport const getAllFeedbacks = () => axios.get(`${BASE_URL}/api/feedback`);\nexport const createFeedback = data => axios.post(`${BASE_URL}/api/feedback`, data);\nexport const updateFeedback = (id, data) => axios.put(`${BASE_URL}/api/feedback/${id}`, data);\nexport const deleteFeedback = id => axios.delete(`${BASE_URL}/api/feedback/${id}`);","map":{"version":3,"names":["axios","BASE_URL","getAllRepairRequests","params","get","getRepairById","id","createRepairRequest","data","post","updateRepairRequest","put","deleteRepairRequest","delete","updateRequestStatus","customerDecision","assignTechnician","updateProgress","downloadReport","responseType","getAllTechnicians","getTechnicianById","getAllFeedbacks","createFeedback","updateFeedback","deleteFeedback"],"sources":["D:/university/2 yr -2 sem/ITP project/CricketXpert/repair-frontend/src/api/repairApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:5000'; // Replace with your backend URL\r\n\r\n// Repair Requests\r\nexport const getAllRepairRequests = (params) => axios.get(`${BASE_URL}/api/repairs`, { params });\r\nexport const getRepairById = (id) => axios.get(`${BASE_URL}/api/repairs/${id}`);\r\nexport const createRepairRequest = (data) => axios.post(`${BASE_URL}/api/repairs`, data);\r\nexport const updateRepairRequest = (id, data) => axios.put(`${BASE_URL}/api/repairs/${id}`, data);\r\nexport const deleteRepairRequest = (id) => axios.delete(`${BASE_URL}/api/repairs/${id}`);\r\nexport const updateRequestStatus = (id, data) => axios.put(`${BASE_URL}/api/repairs/status/${id}`, data);\r\nexport const customerDecision = (id, data) => axios.put(`${BASE_URL}/api/repairs/customer-decision/${id}`, data);\r\nexport const assignTechnician = (id, data) => axios.put(`${BASE_URL}/api/repairs/assign/${id}`, data);\r\nexport const updateProgress = (id, data) => axios.put(`${BASE_URL}/api/repairs/progress/${id}`, data);\r\nexport const downloadReport = (id) => axios.get(`${BASE_URL}/api/repairs/report/download/${id}`, { responseType: 'blob' });\r\n\r\n// Technicians\r\nexport const getAllTechnicians = () => axios.get(`${BASE_URL}/api/technicians`);\r\nexport const getTechnicianById = (id) => axios.get(`${BASE_URL}/api/technicians/${id}`);\r\n\r\n// Feedbacks\r\nexport const getAllFeedbacks = () => axios.get(`${BASE_URL}/api/feedback`);\r\nexport const createFeedback = (data) => axios.post(`${BASE_URL}/api/feedback`, data);\r\nexport const updateFeedback = (id, data) => axios.put(`${BASE_URL}/api/feedback/${id}`, data);\r\nexport const deleteFeedback = (id) => axios.delete(`${BASE_URL}/api/feedback/${id}`);\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMC,oBAAoB,GAAIC,MAAM,IAAKH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,cAAc,EAAE;EAAEE;AAAO,CAAC,CAAC;AAChG,OAAO,MAAME,aAAa,GAAIC,EAAE,IAAKN,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,gBAAgBK,EAAE,EAAE,CAAC;AAC/E,OAAO,MAAMC,mBAAmB,GAAIC,IAAI,IAAKR,KAAK,CAACS,IAAI,CAAC,GAAGR,QAAQ,cAAc,EAAEO,IAAI,CAAC;AACxF,OAAO,MAAME,mBAAmB,GAAGA,CAACJ,EAAE,EAAEE,IAAI,KAAKR,KAAK,CAACW,GAAG,CAAC,GAAGV,QAAQ,gBAAgBK,EAAE,EAAE,EAAEE,IAAI,CAAC;AACjG,OAAO,MAAMI,mBAAmB,GAAIN,EAAE,IAAKN,KAAK,CAACa,MAAM,CAAC,GAAGZ,QAAQ,gBAAgBK,EAAE,EAAE,CAAC;AACxF,OAAO,MAAMQ,mBAAmB,GAAGA,CAACR,EAAE,EAAEE,IAAI,KAAKR,KAAK,CAACW,GAAG,CAAC,GAAGV,QAAQ,uBAAuBK,EAAE,EAAE,EAAEE,IAAI,CAAC;AACxG,OAAO,MAAMO,gBAAgB,GAAGA,CAACT,EAAE,EAAEE,IAAI,KAAKR,KAAK,CAACW,GAAG,CAAC,GAAGV,QAAQ,kCAAkCK,EAAE,EAAE,EAAEE,IAAI,CAAC;AAChH,OAAO,MAAMQ,gBAAgB,GAAGA,CAACV,EAAE,EAAEE,IAAI,KAAKR,KAAK,CAACW,GAAG,CAAC,GAAGV,QAAQ,uBAAuBK,EAAE,EAAE,EAAEE,IAAI,CAAC;AACrG,OAAO,MAAMS,cAAc,GAAGA,CAACX,EAAE,EAAEE,IAAI,KAAKR,KAAK,CAACW,GAAG,CAAC,GAAGV,QAAQ,yBAAyBK,EAAE,EAAE,EAAEE,IAAI,CAAC;AACrG,OAAO,MAAMU,cAAc,GAAIZ,EAAE,IAAKN,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,gCAAgCK,EAAE,EAAE,EAAE;EAAEa,YAAY,EAAE;AAAO,CAAC,CAAC;;AAE1H;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAMpB,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,kBAAkB,CAAC;AAC/E,OAAO,MAAMoB,iBAAiB,GAAIf,EAAE,IAAKN,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,oBAAoBK,EAAE,EAAE,CAAC;;AAEvF;AACA,OAAO,MAAMgB,eAAe,GAAGA,CAAA,KAAMtB,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,eAAe,CAAC;AAC1E,OAAO,MAAMsB,cAAc,GAAIf,IAAI,IAAKR,KAAK,CAACS,IAAI,CAAC,GAAGR,QAAQ,eAAe,EAAEO,IAAI,CAAC;AACpF,OAAO,MAAMgB,cAAc,GAAGA,CAAClB,EAAE,EAAEE,IAAI,KAAKR,KAAK,CAACW,GAAG,CAAC,GAAGV,QAAQ,iBAAiBK,EAAE,EAAE,EAAEE,IAAI,CAAC;AAC7F,OAAO,MAAMiB,cAAc,GAAInB,EAAE,IAAKN,KAAK,CAACa,MAAM,CAAC,GAAGZ,QAAQ,iBAAiBK,EAAE,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
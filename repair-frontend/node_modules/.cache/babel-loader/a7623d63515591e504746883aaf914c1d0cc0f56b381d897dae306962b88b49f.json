{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://localhost:5000/api/users\";\n\n// GET /api/users/search/:username\nrouter.get(\"/search/:username\", async (req, res) => {\n  try {\n    const user = await User.findOne({\n      username: req.params.username\n    });\n    if (!user) return res.status(404).json({\n      error: \"User not found\"\n    });\n    res.json(user);\n  } catch (err) {\n    res.status(500).json({\n      error: err.message\n    });\n  }\n});","map":{"version":3,"names":["axios","BASE_URL","router","get","req","res","user","User","findOne","username","params","status","json","error","err","message"],"sources":["D:/university/2 yr -2 sem/ITP project/CricketXpert/repair-frontend/src/api/userApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/users\";\r\n\r\n// GET /api/users/search/:username\r\nrouter.get(\"/search/:username\", async (req, res) => {\r\n  try {\r\n    const user = await User.findOne({ username: req.params.username });\r\n    if (!user) return res.status(404).json({ error: \"User not found\" });\r\n    res.json(user);\r\n  } catch (err) {\r\n    res.status(500).json({ error: err.message });\r\n  }\r\n});\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,iCAAiC;;AAElD;AACAC,MAAM,CAACC,GAAG,CAAC,mBAAmB,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAClD,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMC,IAAI,CAACC,OAAO,CAAC;MAAEC,QAAQ,EAAEL,GAAG,CAACM,MAAM,CAACD;IAAS,CAAC,CAAC;IAClE,IAAI,CAACH,IAAI,EAAE,OAAOD,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE;IAAiB,CAAC,CAAC;IACnER,GAAG,CAACO,IAAI,CAACN,IAAI,CAAC;EAChB,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZT,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAEC,GAAG,CAACC;IAAQ,CAAC,CAAC;EAC9C;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
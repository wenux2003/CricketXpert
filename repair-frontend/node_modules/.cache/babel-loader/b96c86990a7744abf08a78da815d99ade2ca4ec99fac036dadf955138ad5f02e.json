{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://localhost:5000/api/repairs\";\nexport const submitRepairRequest = async data => {\n  return await axios.post(`${BASE_URL}`, data);\n};\n\n// In repairRequestRoutes.js\nrouter.get(\"/dashboard/username/:username\", async (req, res) => {\n  try {\n    const requests = await RepairRequest.find({\n      username: req.params.username\n    });\n    res.json(requests);\n  } catch (err) {\n    res.status(500).json({\n      error: err.message\n    });\n  }\n});\nexport const updateRepairRequest = async (id, data) => {\n  return await axios.put(`${BASE_URL}/${id}`, data);\n};\nexport const deleteRepairRequest = async id => {\n  return await axios.delete(`${BASE_URL}/${id}`);\n};\nexport const downloadRepairPDF = async id => {\n  return await axios.get(`${BASE_URL}/report/download/${id}`, {\n    responseType: \"blob\"\n  });\n};","map":{"version":3,"names":["axios","BASE_URL","submitRepairRequest","data","post","router","get","req","res","requests","RepairRequest","find","username","params","json","err","status","error","message","updateRepairRequest","id","put","deleteRepairRequest","delete","downloadRepairPDF","responseType"],"sources":["D:/university/2 yr -2 sem/ITP project/CricketXpert/repair-frontend/src/api/repairRequestApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/repairs\"; \r\n\r\nexport const submitRepairRequest = async (data) => {\r\n  return await axios.post(`${BASE_URL}`, data);\r\n};\r\n\r\n// In repairRequestRoutes.js\r\nrouter.get(\"/dashboard/username/:username\", async (req, res) => {\r\n  try {\r\n    const requests = await RepairRequest.find({ username: req.params.username });\r\n    res.json(requests);\r\n  } catch (err) {\r\n    res.status(500).json({ error: err.message });\r\n  }\r\n});\r\n\r\nexport const updateRepairRequest = async (id, data) => {\r\n  return await axios.put(`${BASE_URL}/${id}`, data);\r\n};\r\n\r\nexport const deleteRepairRequest = async (id) => {\r\n  return await axios.delete(`${BASE_URL}/${id}`);\r\n};\r\n\r\nexport const downloadRepairPDF = async (id) => {\r\n  return await axios.get(`${BASE_URL}/report/download/${id}`, { responseType: \"blob\" });\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,mCAAmC;AAEpD,OAAO,MAAMC,mBAAmB,GAAG,MAAOC,IAAI,IAAK;EACjD,OAAO,MAAMH,KAAK,CAACI,IAAI,CAAC,GAAGH,QAAQ,EAAE,EAAEE,IAAI,CAAC;AAC9C,CAAC;;AAED;AACAE,MAAM,CAACC,GAAG,CAAC,+BAA+B,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC9D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,aAAa,CAACC,IAAI,CAAC;MAAEC,QAAQ,EAAEL,GAAG,CAACM,MAAM,CAACD;IAAS,CAAC,CAAC;IAC5EJ,GAAG,CAACM,IAAI,CAACL,QAAQ,CAAC;EACpB,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZP,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MAAEG,KAAK,EAAEF,GAAG,CAACG;IAAQ,CAAC,CAAC;EAC9C;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAOC,EAAE,EAAEjB,IAAI,KAAK;EACrD,OAAO,MAAMH,KAAK,CAACqB,GAAG,CAAC,GAAGpB,QAAQ,IAAImB,EAAE,EAAE,EAAEjB,IAAI,CAAC;AACnD,CAAC;AAED,OAAO,MAAMmB,mBAAmB,GAAG,MAAOF,EAAE,IAAK;EAC/C,OAAO,MAAMpB,KAAK,CAACuB,MAAM,CAAC,GAAGtB,QAAQ,IAAImB,EAAE,EAAE,CAAC;AAChD,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAG,MAAOJ,EAAE,IAAK;EAC7C,OAAO,MAAMpB,KAAK,CAACM,GAAG,CAAC,GAAGL,QAAQ,oBAAoBmB,EAAE,EAAE,EAAE;IAAEK,YAAY,EAAE;EAAO,CAAC,CAAC;AACvF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}